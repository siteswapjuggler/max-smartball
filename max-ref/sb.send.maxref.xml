<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sb.send" module="max" category="Communication">
	<digest>
        Smartball datagram sender
	</digest>
	<description>
        Smartball specific protocol sender over UDP. Manage basics and advanced Smartballs operations : color changing, imu settings, multiballs stream, etc...
    </description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Sylvain Garnavault
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Communication
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Smartball messages
			</digest>
			<description>
				Any available smartball protocol message from color changing to imu settings and many others. See help file and references for more details.
			</description>
		</inlet>
	</inletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="ip" optional="1" type="symbol">
			<digest>
				Destination address
			</digest>
			<description>
				Set the destination address of this sender. Address could be either IPv4 or hostnames format. IPv4 address could be unicast, multicast or broadcast. Default address is set to Smartballs default multicast address: <i>239.0.0.50</i>.
			</description>
		</objarg>
        <objarg name="port" optional="1" type="int">
            <digest>
                Destination port
            </digest>
            <description>
				Set the destination port of this sender. Default port is set to Smartballs default UDP in port: <i>8000</i>
            </description>
        </objarg>
	</objarglist>
	 <!--ATTRIBUTES-->
	<attributelist>
		<attribute name="stream_offset" get="1" set="1" type="int" size="1">
			<digest>
				ID offset
			</digest>
			<description>
				ID offset of the first dataset in the stream.
			</description>
		</attribute>
		<attribute name="stream_loop" get="1" set="1" type="int" size="1">
			<digest>
				Enable loop
			</digest>
			<description>
				Enable ID loop over the stream data.
			</description>
		</attribute>
		<attribute name="stream_col1" get="1" set="1" type="int" size="1">
			<digest>
				Enable foreground sending
			</digest>
			<description>
				Enable transmission of n foreground colors in the stream (0,1,2,3 or 6).
			</description>
		</attribute>
		<attribute name="stream_col2" get="1" set="1" type="int" size="1">
			<digest>
				Enable background sending
			</digest>
			<description>
				Enable transmission of n background colors in the stream (0,1,2,3 or 6).
			</description>
		</attribute>
		<attribute name="stream_mst" get="1" set="1" type="int" size="1">
			<digest>
				Enable master sending
			</digest>
			<description>
				Enable transmission of the master value in the stream.
			</description>
		</attribute>
		<attribute name="stream_stb" get="1" set="1" type="int" size="1">
			<digest>
				Enable strobe sending
			</digest>
			<description>
				Enable transmission of the strobe interval in the stream.
			</description>
		</attribute>
		<attribute name="stream_irl" get="1" set="1" type="int" size="1">
			<digest>
				Enable infrared sending
			</digest>
			<description>
				Enable transmission of the infrared light value in the stream.
			</description>
		</attribute>
		<attribute name="stream_mot" get="1" set="1" type="int" size="1">
			<digest>
				Enable motor sending
			</digest>
			<description>
				Enable transmission of the motor value in the stream.
			</description>
		</attribute>
	</attributelist>
	<!--MESSAGES-->
	<methodlist>
        <method name="ping">
            <digest>
			Ping Smartballs
            </digest>
            <description>
			This method send a <i>ping</i> message to the connected Smartballs. Every reachable device will answer with a pong.
            </description>
        </method>
        <method name="reboot">
            <digest>
			Reboot Smartballs
            </digest>
            <description>
			This method send a <i>reboot</i> message to the connected Smartballs. Every reachable device will reboot. Unsaved parameters on each smartball will be lost. 
			<br/><br/><b>ATTENTION:</b> the first reboot after a firmware flashing doesn't work, you have to reboot the ball manually once first.
            </description>
        </method>
        <method name="saveImu">
            <digest>
			Save IMU settings
            </digest>
            <description>
			This method send a <i>save imu</i> message to the connected Smartballs. Every reachable device will save its current IMU settings into the EEPROM memory. Those settings will be persistant over next power cycles. IMU settings include: IMU active flag, accelerometer range and gyroscope range.
            </description>
        </method>
        <method name="defaultImu">
            <digest>
			Set default IMU settings
            </digest>
            <description>
			This method send a <i>default imu</i> message to the connected Smartballs. Every reachable device will set its current IMU settings to the default values. IMU default settings are: IMU active flag for magnitude and state, accelerometer range to 16g and gyroscope range to 2000 dps.
            </description>
        </method>
        <method name="saveFactory">
            <digest>
			Save factory settings
            </digest>
            <description>
			This method send a <i>save factory</i> message to the connected Smartballs. Every reachable device will save its current factory settings into the EEPROM memory. Those settings will be persistant over next power cycles. Factory settings include: serial number, active device flag and battery scaling.
			<br/><br/><b>ATTENTION:</b> factory settings are set once in factory and should not be changed without a very good purpose.
            </description>
        </method>
        <method name="saveGeneral">
            <digest>
			Save general settings
            </digest>
            <description>
			This method send a <i>save general</i> message to the connected Smartballs. Every reachable device will save its current factory settings into the EEPROM memory. Those settings will be persistant over next power cycles. General settings include: id number.
            </description>
        </method>
        <method name="ir">
			<arglist>
                <arg name="value" optional="0" type="int" />
            </arglist>
            <digest>
			Set infrared PWM
			</digest>
            <description>
			This method send a <i>ir</i> message to the connected Smartballs. Every reachable device will set a new PWM value for its infrared led output.
			<br/><b>OPTIONAL:</b> infrared leds availability depends on your device electronic configuration.
            </description>
        </method>
		<method name="vibe">
			<arglist>
                <arg name="value" optional="0" type="int" />
            </arglist>
            <digest>
			Set vibration PWM
			</digest>
            <description>
			This method send a <i>vibe</i> message to the connected Smartballs. Every reachable device will set a new PWM value for its vibration motor output.
			<br/><b>OPTIONAL:</b> vibration motor availability depends on your device electronic configuration.
            </description>
        </method>
		<method name="master">
			<arglist>
                <arg name="value" optional="0" type="float" />
            </arglist>
            <digest>
			Set master channel
			</digest>
            <description>
			This method send a <i>master</i> message to the connected Smartballs. Every reachable device will set a new master value for all colors output.
            </description>
        </method>
		<method name="strobe">
			<arglist>
                <arg name="value" optional="0" type="float" />
            </arglist>
            <digest>
			Set strobe effect interval
			</digest>
            <description>
			This method send a <i>strobe</i> message to the connected Smartballs. Every reachable device will set a new strobe effect interval value.
            </description>
        </method>
		<method name="color">
			<arglist>
                <arg name="RGB values" optional="0" type="list" />
            </arglist>
            <digest>
			Set colors
			</digest>
            <description>
			This method send a <i>color</i> message to the connected Smartballs. Every reachable device will change its colors according to the number of arguments. The method accept [0-255] integers or [0.-1.] floats.<br/>
			<br/><b>3 values:</b> 1 color mode, every leds on the ball take this color.
			<br/><b>6 values:</b> 2 colors mode, both hemispheres take one color each.
			<br/><b>9 values:</b> 3 colors mode, pairs of opposite leds take one color each.
			<br/><b>18 values:</b> 6 colors mode, each single led takes one color.
            </description>
        </method>
		<method name="background">
			<arglist>
                <arg name="RGB values" optional="0" type="list" />
            </arglist>
            <digest>
			Set strobe effect off-cycle colors
			</digest>
            <description>
			This method send a <i>background</i> message to the connected Smartballs. Every reachable device will change its strobe effect off-cycle colors according to the number of arguments. The method accept [0-255] integers or [0.-1.] floats. This message accept multicolor argument in the same way as the color message.
            </description>
        </method>
		<method name="stream">
			<arglist>
                <arg name="RGB values" optional="0" type="list" />
            </arglist>
            <digest>
			Set multiballs colors
			</digest>
			<description>
			This method send a <i>stream</i> message to the connected Smartballs. Every reachable device will change its colors according to its serial number. The first argument defines the number of colors sent to each ball. Other arguments depends on the number of colors and the number of different color set you want to transmit. The method accept [0-255] integers or [0.-1.] floats.<br/>
			<br/><b>EXAMPLE #1:</b> 1 RGB1 RGB2 RGB3 - balls with (sn % 3) == 0 change to RGB1, balls with (sn % 3) == 1 change to RGB2, balls with (sn % 3) == 2 change to RGB3.
			<br/><b>EXAMPLE #2:</b> 2 RGB1 RGB1' RGB2 RGB2' - balls with (sn % 2) == 0 change to 2 colors mode RGB1/RGB1', balls with (sn % 2) == 1 change to 2 colors mode RGB2/RGB2'.
			<br/><b>EXAMPLE #3:</b> 3 RGB1 RGB1' RGB1" - every ball goes to 3 colors mode RGB1/RGB1'/RGB1". The effect is the same as a color message because every ball answer to (sn % 1) == 0.
            </description>
        </method>
        <method name="setImu">
			<arglist>
                <arg name="flag" optional="0" type="int" />
            </arglist>
            <digest>
			Enable IMU sensors
			</digest>
            <description>
			This method send a <i>setImu</i> message to the connected Smartballs. Every reachable device will enable its own MPU9250 sensors feedbacks according to the sent flag.<br/>
			<br/><b>bit 0:</b> enable accelerometer.
			<br/><b>bit 1:</b> enable gyroscope.
			<br/><b>bit 2:</b> enable magnetometer.
			<br/><b>bit 3:</b> enable temperature sensor.
			<br/><b>bit 4:</b> enable vector magnitude.
			<br/><b>bit 5:</b> enable quaternion.
			<br/><b>bit 6:</b> enable world acceleration.
			<br/><b>bit 7:</b> enable state filter.
            </description>
        </method>
        <method name="accRange">
			<arglist>
                <arg name="value" optional="0" type="int" />
            </arglist>
            <digest>
			Set accelerometer fullrange scale
			</digest>
            <description>
			This method send a <i>accelerometer range</i> message to the connected Smartballs. Every reachable device will set its MPU9250 accelerometer fullscale range according to the sent value.<br/>
			<br/><b>0:</b> -2g/+2g sensibility.
			<br/><b>1:</b> -4g/+4g sensibility.
			<br/><b>2:</b> -8g/+8g sensibility.
			<br/><b>3:</b> -16g/+16g sensibility.
            </description>
        </method>
        <method name="gyrRange">
			<arglist>
                <arg name="value" optional="0" type="int" />
            </arglist>
            <digest>
			Set gyroscope fullrange scale
			</digest>
            <description>
			This method send a <i>gyroscope range</i> message to the connected Smartballs. Every reachable device will set its MPU9250 gyroscope fullscale range according to the sent value.<br/>
			<br/><b>0:</b> -250dps/+250dps sensibility.
			<br/><b>1:</b> -500dps/+500dps sensibility.
			<br/><b>2:</b> -1000dps/+1000dps sensibility.
			<br/><b>3:</b> -2000dps/+2000dps sensibility.
            </description>
        </method>
        <method name="setFactory">
			<arglist>
                <arg name="serial number, device flag, battery scale" optional="0" type="list" />
            </arglist>
            <digest>
			Set factory settings
			</digest>
            <description>
			This method send a <i>set factory</i> message to the connected Smartballs. Every reachable device will change its factory settings according to the sent values.<br/>
			<br/><b>argument 1:</b> serial number [0-65535].
			<br/><b>argument 2:</b> device flag, 3 for device with RGB Leds + IMU, 15 for full options device.
			<br/><b>argument 3:</b> battery scale [0.1-1024.] 
            </description>
        </method>
		<method name="setGeneral">
			<arglist>
                <arg name="id number" optional="0" type="int" />
            </arglist>
            <digest>
			Set general settings
			</digest>
            <description>
			This method send a <i>set general</i> message to the connected Smartballs. Every reachable device will change its general settings according to the sent values.<br/>
			<br/><b>argument 1:</b> id number [0-65535].
            </description>
        </method>
	</methodlist>
   <!--SEEALSO-->
    <seealsolist>
		<seealso name="sb.receive" />
    </seealsolist>
</c74object>
